using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
public class splines : MonoBehaviour
{
    public Vector3[] points;
    public int CurveCount
    {
        get
        {
            return (points.Length - 1) / 3;
        }
    }
    // Start is called before the first frame update
    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {

    }
    public void Reset()
    {
        points = new Vector3[]
        {
            new Vector3(1f,0f,0f),
            new Vector3(2f,0f,0f),
            new Vector3(3f,0f,0f),
            new Vector3(4f,0f,0f),
        };
    }
    /*public Vector3 GetPoint3(float t)
    {
        return (1 - t) * (1 - t) * points[0] + 2 * (1 - t) * t * points[1] + t * t * points[2];
    }
    public Vector3 GetPoint4(int index1, int index2, int index3, int index4, float t)
    {
        return (1 - t) * (1 - t) * (1 - t) * points[index1] + 3 * (1 - t) * (1 - t) * t * points[index2] + 3 * (1 - t) * t * t * points[index3] + t * t * t * points[index4];

    }*/


    public void AddCurve()
    {
        Vector3 point = points[points.Length - 1];
        Array.Resize(ref points, points.Length + 3);
        point.x += 1f;
        points[points.Length - 3] = point;
        point.x += 1f;
        points[points.Length - 2] = point;
        point.x += 1f;
        points[points.Length - 1] = point;
    }
    public Vector3 GetPoint(float t)
    {
        int i;
        if (t >= 1f)
        {
            t = 1f;
            i = points.Length - 4;
        }
        else
        {
            t = Mathf.Clamp01(t) * CurveCount;
            i = (int)t;
            t -= i;
            i *= 3;
        }
        return transform.TransformPoint(Bezier.GetPoint(
            points[i], points[i + 1], points[i + 2], points[i + 3], t));
    }
}
